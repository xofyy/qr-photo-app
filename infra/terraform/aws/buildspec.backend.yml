# CodeBuild buildspec for QR Photo backend container.
# Bu betik CodePipeline/CodeBuild calistiginda Docker imajini build eder,
# ECR deposuna push eder ve ECS servisini yeni imajla gunceller.
version: 0.2
env:
  variables:
    # ECS servis adlari build ortaminda environment variable olarak gonderilir.
    CLUSTER_NAME: ${CLUSTER_NAME}
    SERVICE_NAME: ${SERVICE_NAME}
    IMAGE_REPO_NAME: ${IMAGE_REPO_NAME}
    IMAGE_TAG: ${IMAGE_TAG}
phases:
  install:
    commands:
      - "echo \"[install] Docker surumunu dogruluyorum...\""
      - "docker --version"
  pre_build:
    commands:
      - "echo \"[pre_build] AWS hesabini tespit ediyorum...\""
      - "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)"
      - "ECR_REGISTRY=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
      - "echo \"[pre_build] ECR oturum aciliyor: $ECR_REGISTRY\""
      - "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY"
  build:
    commands:
      - "echo \"[build] Docker imajini olusturuyorum...\""
      - "docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG -f backend/Dockerfile ."
      - "docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG"
  post_build:
    commands:
      - "echo \"[post_build] Imaj ECR deposuna gonderiliyor...\""
      - "docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG"
      - "echo \"[post_build] ECS servisi yeni imajla yeniden devreye alinacak...\""
      - "aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $AWS_REGION"
artifacts:
  files: []
